{
  "paragraphs": [
    {
      "text": "// load js libs needed\nprint(s\"\"\"%html\n\u003cscript\u003e\nvar firstScript \u003d document.getElementsByTagName(\u0027script\u0027)[0],\n      js \u003d document.createElement(\u0027script\u0027);\n  js.src \u003d \u0027https://cdnjs.cloudflare.com/ajax/libs/Snowstorm/20131208/snowstorm-min.js\u0027;\n  js.onload \u003d function () {\n    // do stuff with your dynamically loaded script\n    snowStorm.snowColor \u003d \u0027#99ccff\u0027;\n  };\n  firstScript.parentNode.insertBefore(js, firstScript);\n \n\u003c/script\u003e\n\n\"\"\")",
      "dateUpdated": "Dec 31, 2015 12:01:53 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1451499093518_411879135",
      "id": "20151230-181133_1719238804",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cscript\u003e\nvar firstScript \u003d document.getElementsByTagName(\u0027script\u0027)[0],\n      js \u003d document.createElement(\u0027script\u0027);\n  js.src \u003d \u0027https://cdnjs.cloudflare.com/ajax/libs/Snowstorm/20131208/snowstorm-min.js\u0027;\n  js.onload \u003d function () {\n    // do stuff with your dynamically loaded script\n    snowStorm.snowColor \u003d \u0027#99ccff\u0027;\n  };\n  firstScript.parentNode.insertBefore(js, firstScript);\n \n\u003c/script\u003e\n\n"

      },
      "dateCreated": "Dec 30, 2015 6:11:33 PM",
      "dateStarted": "Dec 31, 2015 12:01:53 AM",
      "dateFinished": "Dec 31, 2015 12:01:53 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// not sure how to wait for it to load above, doing them one by one\nprint(s\"\"\"%html\n\u003cscript\u003e\n    snowStorm.start();\n\u003c/script\u003e\n\n\"\"\")",
      "dateUpdated": "Dec 31, 2015 12:01:53 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1451499154641_-1487718130",
      "id": "20151230-181234_1347587225",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cscript\u003e\n    snowStorm.start();\n\u003c/script\u003e\n\n"
      },
      "dateCreated": "Dec 30, 2015 6:12:34 PM",
      "dateStarted": "Dec 31, 2015 12:01:53 AM",
      "dateFinished": "Dec 31, 2015 12:01:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// now lets get require.js loaded\n\nprint(s\"\"\"%html\n\u003cscript\u003e\n\nvar firstScript \u003d document.getElementsByTagName(\u0027script\u0027)[0],\n      js \u003d document.createElement(\u0027script\u0027);\n  js.src \u003d \u0027https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.22/require.js\u0027;\n  js.onload \u003d function () {\n    // do stuff with your dynamically loaded script\n    snowStorm.snowColor \u003d \u0027#99ccff\u0027;\n  };\n  firstScript.parentNode.insertBefore(js, firstScript);\n \n\u003c/script\u003e\n\n\"\"\")",
      "dateUpdated": "Dec 31, 2015 12:01:53 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1451499890553_-951918919",
      "id": "20151230-182450_91745605",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cscript\u003e\n\nvar firstScript \u003d document.getElementsByTagName(\u0027script\u0027)[0],\n      js \u003d document.createElement(\u0027script\u0027);\n  js.src \u003d \u0027https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.22/require.js\u0027;\n  js.onload \u003d function () {\n    // do stuff with your dynamically loaded script\n    snowStorm.snowColor \u003d \u0027#99ccff\u0027;\n  };\n  firstScript.parentNode.insertBefore(js, firstScript);\n \n\u003c/script\u003e\n\n"
      },
      "dateCreated": "Dec 30, 2015 6:24:50 PM",
      "dateStarted": "Dec 31, 2015 12:01:54 AM",
      "dateFinished": "Dec 31, 2015 12:01:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//val data \u003d \"\"\"\"\"\"\n\nprint(s\"\"\"%html\n\u003cdiv id\u003d\"chart_placeholder\"\u003e\u003c/div\u003e\n\u003cstyle\u003e\n.zoom{\n    fill-opacity:0;\n}\n\u003c/style\u003e\n\u003cscript\u003e\n\nrequire.config({\n    paths: {\n        \u0027eventDrops\u0027 : \u0027https://cdn.rawgit.com/marmelab/EventDrops/d55f8b001dc659eacef20edfec8b7159cffaa923/dist/eventDrops\u0027 // keep this at a version... not very nice but what can you do\n    }\n});\n\nrequirejs([\"eventDrops\"], function(eD) {\n    var data \u003d [];\n    var names \u003d [\"Lorem\", \"Ipsum\", \"Dolor\", \"Sit\", \"Amet\", \"Consectetur\", \"Adipisicing\", \"elit\", \"Eiusmod tempor\", \"Incididunt\"];\n    var endTime \u003d Date.now();\n    var month \u003d 30 * 24 * 60 * 60 * 1000;\n    var startTime \u003d endTime - 6 * month;\n    \n    function createEvent (name, maxNbEvents) {\n        maxNbEvents \u003d maxNbEvents | 200;\n        var event \u003d {\n            name: name,\n            dates: []\n
 };\n        // add up to 200 events\n        var max \u003d  Math.floor(Math.random() * maxNbEvents);\n        for (var j \u003d 0; j \u003c max; j++) {\n            var time \u003d (Math.random() * (endTime - startTime)) + startTime;\n            event.dates.push(new Date(time));\n        }\n        return event;\n    }\n    \n    for (var i \u003d 0; i \u003c 10; i++) {\n        data.push(createEvent(names[i]));\n    }\n\n    var color \u003d d3.scale.category20();\n    \n    var eventDropsChart \u003d d3.chart.eventDrops()\n        .eventLineColor(function (datum, index) {\n            return color(index);\n        })\n        .start(new Date(startTime))\n        .end(new Date(endTime))\n        .hasTopAxis(false)\n        .hasBottomAxis(false);\n    \n    d3.select(\u0027#chart_placeholder\u0027)\n      .datum(data)\n      .call(eventDropsChart);\n    \n});\n\u003c/script\u003e\n\"\"\")",
      "dateUpdated": "Dec 31, 2015 12:06:58 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1451500098929_446718309",
      "id": "20151230-182818_717639272",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cdiv id\u003d\"chart_placeholder\"\u003e\u003c/div\u003e\n\u003cstyle\u003e\n.zoom{\n    fill-opacity:0;\n}\n\u003c/style\u003e\n\u003cscript\u003e\n\nrequire.config({\n    paths: {\n        \u0027eventDrops\u0027 : \u0027https://cdn.rawgit.com/marmelab/EventDrops/d55f8b001dc659eacef20edfec8b7159cffaa923/dist/eventDrops\u0027 // keep this at a version... not very nice but what can you do\n    }\n});\n\nrequirejs([\"eventDrops\"], function(eD) {\n    var data \u003d [];\n    var names \u003d [\"Lorem\", \"Ipsum\", \"Dolor\", \"Sit\", \"Amet\", \"Consectetur\", \"Adipisicing\", \"elit\", \"Eiusmod tempor\", \"Incididunt\"];\n    var endTime \u003d Date.now();\n    var month \u003d 30 * 24 * 60 * 60 * 1000;\n    var startTime \u003d endTime - 6 * month;\n    \n    function createEvent (name, maxNbEvents) {\n        maxNbEvents \u003d maxNbEvents | 200;\n        var event \u003d {\n            name: name,\n            dates: []\n        };\n        // add up to 200 events\n        var max \u003d  Math.floor(Math.random() * maxNbEvents);\n        for (var j \u003d 0; j \u003c max; j++) {\n            var time \u003d (Math.random() * (endTime - startTime)) + startTime;\n            event.dates.push(new Date(time));\n        }\n        return event;\n    }\n    \n    for (var i \u003d 0; i \u003c 10; i++) {\n        data.push(createEvent(names[i]));\n    }\n\n    var color \u003d d3.scale.category20();\n    \n    var eventDropsChart \u003d d3.chart.eventDrops()\n        .eventLineColor(function (datum, index) {\n            return color(index);\n        })\n        .start(new Date(startTime))\n        .end(new Date(endTime))\n        .hasTopAxis(false)\n
    .hasBottomAxis(false);\n    \n    d3.select(\u0027#chart_placeholder\u0027)\n      .datum(data)\n      .call(eventDropsChart);\n    \n});\n\u003c/script\u003e\n"
      },
      "dateCreated": "Dec 30, 2015 6:28:18 PM",
      "dateStarted": "Dec 31, 2015 12:06:58 AM",
      "dateFinished": "Dec 31, 2015 12:06:58 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Dec 31, 2015 12:01:53 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1451500268214_-824078304",
      "id": "20151230-183108_336731690",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Dec 30, 2015 6:31:08 PM",
      "dateStarted": "Dec 31, 2015 12:01:55 AM",
      "dateFinished": "Dec 31, 2015 12:01:55 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "requirejs example",
  "id": "2B83XJ6GK",
  "angularObjects": {
    "2B8SHHHTS": [],
    "2B9ACXMHT": [],
    "2B6UM7CVZ": [],
    "2B8K9KQZ1": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}[zeppelin@docker-ambari 2B83XJ6GK]#